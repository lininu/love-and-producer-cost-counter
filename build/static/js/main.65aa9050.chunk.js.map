{"version":3,"sources":["Gavin/Boiling.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["fragmentTotal","activityItemsToSingleFragment","GAVIN_ACTIVITY_ITEM","Boiling","props","_ref","_ref2","_ref3","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","count","free","option","0420前累消2600鑽送","defineProperty","登入送","寫真換一碎片","總共需要碎片","總共需要寫真","掉率","max","min","重置所需鑽數","拍攝里程碑反鑽數","dataSource","key","售價","鑽石","setState","reccount","_this2","isInit","arguments","length","undefined","_this$state","map","data","totalOwnDimand","totalOwnPhoto","objectSpread","asumeCount","(鑽石+白起的寫真)換算鑽石數","1元幾鑽(只算鑽石+寫真)","可得寫真","可得碎片","react_default","a","createElement","input_number","concat","defaultValue","onChange","value","d","_this3","_this$state2","totalPhoto","_","className","style","minWidth","item","index","row","classnames","text-right","text-danger","displayKey","displayItem","numeral","format","step","opt","val","k","join","Component","App","Gavin_Boiling","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.65aa9050.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { InputNumber } from 'antd';\r\nimport * as _ from 'lodash';\r\nimport numeral from 'numeral';\r\nimport classnames from 'classnames';\r\n\r\nconst fragmentTotal = 80;\r\nconst activityItemsToSingleFragment = 79;\r\n\r\nconst GAVIN_ACTIVITY_ITEM = '白起的寫真';\r\nconst FRAGEMNT = '碎片';\r\n\r\nclass Boiling extends Component<any, any> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      count: 1.25,\r\n      free: 15,\r\n      option: {\r\n        '0420前累消2600鑽送': { [GAVIN_ACTIVITY_ITEM]: 850 },\r\n        '登入送': { [GAVIN_ACTIVITY_ITEM]: 200 },\r\n        '寫真換一碎片': { [GAVIN_ACTIVITY_ITEM]: activityItemsToSingleFragment },\r\n        '總共需要碎片': fragmentTotal,\r\n        '總共需要寫真': activityItemsToSingleFragment * fragmentTotal,\r\n        '掉率': {\r\n          max: 2,\r\n          min: 1\r\n        },\r\n        '重置所需鑽數': 3,\r\n        '拍攝里程碑反鑽數': 1440,\r\n      },\r\n      dataSource: [{\r\n        key: '穿搭提示',\r\n        '售價': 30,\r\n        '鑽石': 85,\r\n        [GAVIN_ACTIVITY_ITEM]: 79,\r\n        '金幣': 3700,\r\n        '紙鶴串': 10,\r\n        '上限': 3,\r\n        '建議': 3,\r\n      }, {\r\n        key: '精緻配飾',\r\n        '售價': 150,\r\n        '鑽石': 280,\r\n        [GAVIN_ACTIVITY_ITEM]: 98,\r\n        '金幣': 4700,\r\n        '紙鶴串': 24,\r\n        '上限': 3,\r\n        '建議': 0,\r\n      }, {\r\n        key: '棚拍秘笈',\r\n        '售價': 390,\r\n        '鑽石': 880,\r\n        [GAVIN_ACTIVITY_ITEM]: 498,\r\n        '金幣': 24000,\r\n        '紙鶴串': 120,\r\n        '上限': 5,\r\n        '建議': 3,\r\n      }]\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({ dataSource: this.reccount(true) });\r\n  }\r\n\r\n  reccount(isInit = false) {\r\n    const { dataSource, option, count, free } = this.state;\r\n    const countedData = dataSource.map((data: any) => {\r\n      const totalOwnDimand = data['鑽石'] + (data[GAVIN_ACTIVITY_ITEM] / count * option['重置所需鑽數']);\r\n      const totalOwnPhoto = data['鑽石'] / option['重置所需鑽數'] * count + data[GAVIN_ACTIVITY_ITEM];\r\n      data = {\r\n        ...data,\r\n        asumeCount: isInit ? data['建議'] : data.asumeCount,\r\n        '(鑽石+白起的寫真)換算鑽石數': totalOwnDimand,\r\n        '1元幾鑽(只算鑽石+寫真)': totalOwnDimand / data['售價'],\r\n        '可得寫真': totalOwnPhoto,\r\n        '可得碎片': totalOwnPhoto / activityItemsToSingleFragment,\r\n      };\r\n      if (isInit) {\r\n        data['預計購買'] = <InputNumber key={`預計購買_${data.key}`} min={0} max={data['上限']} defaultValue={data['建議']} onChange={value => {\r\n          this.setState({\r\n            dataSource: this.state.dataSource.map((d: any) => {\r\n              if (d.key === data.key) {\r\n                const totalOwnPhoto = d['鑽石'] / option['重置所需鑽數'] * this.state.count + d[GAVIN_ACTIVITY_ITEM];\r\n                d.asumeCount = value;\r\n                d['預計可得寫真'] = d.asumeCount * totalOwnPhoto;\r\n              }\r\n              return d;\r\n            })\r\n          })\r\n        }} />\r\n      }\r\n\r\n      data['預計可得寫真'] = data.asumeCount * totalOwnPhoto;\r\n    \r\n      return data;\r\n    });\r\n    return countedData;\r\n  }\r\n\r\n  render() {\r\n    const { dataSource, option, count, free } = this.state;\r\n    const totalPhoto = option['總共需要寫真'] - _.sumBy(this.state.dataSource, (d: any) => d['預計可得寫真']) - option['0420前累消2600鑽送'][GAVIN_ACTIVITY_ITEM] - option['登入送'][GAVIN_ACTIVITY_ITEM] - free - option['拍攝里程碑反鑽數'] / option['重置所需鑽數'] * count;\r\n    // console.log(option['總共需要寫真'], _.sumBy(this.state.dataSource, (d: any) => d['預計可得寫真']), option['0420前累消2600鑽送'][GAVIN_ACTIVITY_ITEM], option['登入送'][GAVIN_ACTIVITY_ITEM], free, option['拍攝里程碑反鑽數'] / option['重置所需鑽數'] * count)\r\n    return (\r\n      <div className=\"container my-3\">\r\n        <h2>禮包計算機 <small>戀與製作人</small></h2>\r\n        <div className=\"row\">\r\n          <div className=\"col-12 col-lg-7\">\r\n            <div className=\"table-responsive\">\r\n              <table className=\"table table-striped\">\r\n                <thead>\r\n                  <tr>\r\n                    <th style={{minWidth: 90}}></th>\r\n                    {_.map(dataSource, (item: any, index: any) =>\r\n                      <th className=\"text-center\" key={index}>{item.key}</th>\r\n                    )}\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {_.map(dataSource[0], (row: any, key: string) =>\r\n                    !_.includes(['key', '建議', 'asumeCount'], key) ? \r\n                    <tr key={key}>\r\n                      <th className={classnames({\r\n                        'text-right': true,\r\n                        'text-danger': _.includes(['預計購買'], key)\r\n                      })}>{key}</th>\r\n                      {_.map(dataSource, (item: any, index: any) => {\r\n                        const displayKey = _.result(dataSource, `[${index}]['key']`);\r\n                        let displayItem = _.result(dataSource, `[${index}][${key}]`);\r\n                        if (_.isNumber(displayItem)) {\r\n                          displayItem = numeral(displayItem).format('0,0.[000]');\r\n                        }\r\n                        return <td className=\"text-right\" key={`${key}_${displayKey}`} >{displayItem}</td>;\r\n                      })}\r\n                    </tr> : null\r\n                  )}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n            <div className=\"table-responsive\">\r\n              <table className=\"table table-striped\">\r\n                <tbody>\r\n                  <tr className=\"bg-secondary text-white\">\r\n                    <th className=\"text-right\">課金總額</th>\r\n                    <td className=\"text-right\">NT$&nbsp;{numeral(_.sumBy(this.state.dataSource, (d: any) => d.asumeCount * d['售價'])||0).format('0,0.[000]')}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <th className=\"text-right\">仍需寫真數</th>\r\n                    <td className=\"text-right\">{numeral(totalPhoto).format('0,0.[000]')}</td>\r\n                  </tr>\r\n                  <tr className=\"bg-danger text-white\">\r\n                    <th className=\"text-right\">除了活動禮包、反鑽等鑽石，額外需要的存鑽量</th>\r\n                    <td className=\"text-right\">{numeral(totalPhoto / count * option['重置所需鑽數']).format('0,0.[000]')}</td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-12 col-lg-5\">\r\n            <div className=\"table-responsive\">\r\n              <table className=\"table table-striped\">\r\n                <tbody>\r\n                  <tr>\r\n                    <th className=\"text-right\">免費拍攝次數</th>\r\n                    <td className=\"text-right\"><InputNumber key=\"免費拍攝次數\" min={15} max={15 * option['掉率']['max']} defaultValue={free} onChange={value => {\r\n                      this.setState({ free: value }, () => {\r\n                        this.setState({ dataSource: this.reccount() });\r\n                      });\r\n                    }}/></td>\r\n                  </tr>\r\n                  <tr>\r\n                    <th className=\"text-right\">預計掉落個數</th>\r\n                    <td className=\"text-right\"><InputNumber key=\"預計掉落個數\" step={0.01} min={option['掉率']['min']} max={option['掉率']['max']} defaultValue={count} onChange={value => {\r\n                      this.setState({ count: value }, () => {\r\n                        this.setState({ dataSource: this.reccount() });\r\n                      });\r\n                    }}/></td>\r\n                  </tr>\r\n                  {_.map(option, (opt: any, key: string) => {\r\n                    const value = _.isObject(opt) ? _.map(opt, (val, k) => numeral(val).format('0,0')).join('') : numeral(opt).format('0,0');\r\n\r\n                    return !_.includes(['掉率', 'asumeCount'], key) ?\r\n                      <tr key={key}>\r\n                        <th className=\"text-right\">{key}</th>\r\n                        <td className=\"text-right\">{value}</td>\r\n                      </tr> : null\r\n                  })}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Boiling;","import React, { Component } from 'react';\n// import logo from './logo.svg';\nimport './scss/main.scss';\nimport Boiling from './Gavin/Boiling';\n\nclass App extends Component {\n  render() {\n    return <Boiling />;\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}