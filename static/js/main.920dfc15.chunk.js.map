{"version":3,"sources":["constant/boiling.tsx","db/boiling.tsx","Gavin/Boiling.tsx","constant/config.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["ACTIVITY_ITEM","CONVERT_DIMAND","concat","PROICE_PERCENTAGE","OWN_ACTIVITY_ITEMS","OWN_ACTIVITY_ITEMS_TO_FRAGEMNT","EXPECT_OWN_TOTAL_ACTIVITY_ITEMS","GRAND_TOTAL_GIFT_ACTIVITY_ITEMS","LOGIN_GIFT_ACTIVITY_ITEMS","ACTIVITY_ITEM_TO_FRAGEMNT","TOTAL_FRAGEMNT","TOTAL_ACTIVITY_ITEMS","RESET_DIMAND_COST","MILESTONE_DIMAND_GIFT","AVERAGE","NEEDED_ACTIVITY_ITEMS","NEEDED_DIMAND","fragmentTotal","activityItemsToSingleFragment","expectAverage","free","preGrantTotalItems","preGiftItems","averageMax","averageMin","perDimandCost","milestoneGiftDimand","activityItems","_ref","key","Object","defineProperty","CONST","_ref2","_ref3","Boiling","props","_option","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","count","freeDefault","option","max","min","dataSource","setState","reccount","_this2","isInit","arguments","length","undefined","_this$state","map","data","_objectSpread2","totalOwnDimand","totalOwnPhoto","objectSpread","asumeCount","react_default","a","createElement","input_number","defaultValue","onChange","value","d","_this3","_this$state2","totalPhoto","_","className","style","minWidth","item","index","row","classnames","text-right","text-danger","displayKey","displayItem","numeral","format","step","opt","val","k","join","Component","App","Gavin_Boiling","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.920dfc15.chunk.js","sourcesContent":["export const PAGE_TITLE = '白起．沸騰';\r\n\r\nexport const BOX_PRICE_PERFORMANCE = `穿搭提示`;\r\nexport const BOX_NORMAL = `精緻配飾`;\r\nexport const BOX_COMPETITIVE = `棚拍秘笈`;\r\n\r\nexport const ACTIVITY_ITEM = `白起的寫真`;\r\nexport const ACTIVITY_ITEM_SHORT = `寫真`;\r\nexport const FRAGEMNT = `碎片`;\r\nexport const PRICE = `售價`;\r\nexport const DIMAND = `鑽石`;\r\nexport const DIMAND_SHORT = `鑽`;\r\nexport const COIN = `金幣`;\r\nexport const EXPERIENCE = `紙鶴串`;\r\nexport const ADVICE = `建議`;\r\nexport const LIMIT = `上限`;\r\nexport const CONVERT_DIMAND = `(${DIMAND}+${ACTIVITY_ITEM_SHORT})換算${DIMAND_SHORT}數`;\r\nexport const PROICE_PERCENTAGE = `(${DIMAND}+${ACTIVITY_ITEM_SHORT})1元幾${DIMAND_SHORT}`;\r\nexport const OWN_ACTIVITY_ITEMS = `可得${ACTIVITY_ITEM_SHORT}`;\r\nexport const OWN_ACTIVITY_ITEMS_TO_FRAGEMNT = `${ACTIVITY_ITEM_SHORT}可換${FRAGEMNT}數`;\r\nexport const EXPECT_PURCHASE = `預計購買`;\r\nexport const EXPECT_OWN_TOTAL_ACTIVITY_ITEMS = `預計可得${ACTIVITY_ITEM_SHORT}總數`;\r\nexport const GRAND_TOTAL_GIFT_ACTIVITY_ITEMS = `0420前累消2600${DIMAND_SHORT}送${ACTIVITY_ITEM_SHORT}`;\r\nexport const LOGIN_GIFT_ACTIVITY_ITEMS = `登入送${ACTIVITY_ITEM_SHORT}`;\r\nexport const ACTIVITY_ITEM_TO_FRAGEMNT = `${ACTIVITY_ITEM_SHORT}換1${FRAGEMNT}`;\r\nexport const TOTAL_FRAGEMNT = `總共需要${FRAGEMNT}`;\r\nexport const TOTAL_ACTIVITY_ITEMS = `總共需要${ACTIVITY_ITEM_SHORT}`;\r\nexport const RESET_DIMAND_COST = `重置花費${DIMAND_SHORT}數`;\r\nexport const MILESTONE_DIMAND_GIFT = `拍攝里程碑反${DIMAND_SHORT}數`;\r\nexport const FREE_ACTIVITY_COUNT = `免費拍攝次數`;\r\nexport const AVERAGE = `掉率`;\r\nexport const AVERAGE_ACTIVITY_ITEMS = `平均掉落個數`;\r\nexport const TOTAL_PRICE = `課金總額`;\r\nexport const NEEDED_ACTIVITY_ITEMS = `仍需${ACTIVITY_ITEM_SHORT}數`;\r\nexport const NEEDED_DIMAND = `除了活動禮包、反${DIMAND_SHORT}等${DIMAND}，額外需要的存${DIMAND_SHORT}量`;\r\n","import * as CONST from './../constant/boiling';\r\n\r\nexport const fragmentTotal = 80;\r\nexport const activityItemsToSingleFragment = 79;\r\nexport const expectAverage = 1.25;\r\nexport const free = 15;\r\nexport const preGrantTotalItems = 850;\r\nexport const preGiftItems = 200;\r\nexport const averageMax = 2;\r\nexport const averageMin = 1;\r\nexport const perDimandCost = 3;\r\nexport const milestoneGiftDimand = 1440;\r\n\r\nexport const activityItems = [\r\n  {\r\n    key: CONST.BOX_PRICE_PERFORMANCE,\r\n    [CONST.PRICE]: 30,\r\n    [CONST.DIMAND]: 85,\r\n    [CONST.ACTIVITY_ITEM]: 79,\r\n    [CONST.COIN]: 3700,\r\n    [CONST.EXPERIENCE]: 10,\r\n    [CONST.LIMIT]: 3,\r\n    [CONST.ADVICE]: 3,\r\n  }, {\r\n    key: CONST.BOX_NORMAL,\r\n    [CONST.PRICE]: 150,\r\n    [CONST.DIMAND]: 280,\r\n    [CONST.ACTIVITY_ITEM]: 98,\r\n    [CONST.COIN]: 4700,\r\n    [CONST.EXPERIENCE]: 24,\r\n    [CONST.LIMIT]: 3,\r\n    [CONST.ADVICE]: 0,\r\n  }, {\r\n    key: CONST.BOX_COMPETITIVE,\r\n    [CONST.PRICE]: 390,\r\n    [CONST.DIMAND]: 880,\r\n    [CONST.ACTIVITY_ITEM]: 498,\r\n    [CONST.COIN]: 24000,\r\n    [CONST.EXPERIENCE]: 120,\r\n    [CONST.LIMIT]: 5,\r\n    [CONST.ADVICE]: 3,\r\n  }\r\n];","import React, { Component } from 'react';\r\nimport { InputNumber } from 'antd';\r\nimport * as _ from 'lodash';\r\nimport numeral from 'numeral';\r\nimport classnames from 'classnames';\r\nimport {\r\n  activityItems,\r\n  expectAverage,\r\n  free as freeDefault,\r\n  preGrantTotalItems,\r\n  preGiftItems,\r\n  averageMax,\r\n  averageMin,\r\n  perDimandCost,\r\n  milestoneGiftDimand,\r\n  fragmentTotal,\r\n  activityItemsToSingleFragment,\r\n} from '../db/boiling';\r\nimport * as CONST from './../constant/boiling';\r\nimport { NUMERAL_FORMAT } from './../constant/config';\r\n\r\nclass Boiling extends Component<any, any> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      count: expectAverage,\r\n      free: freeDefault,\r\n      option: {\r\n        [CONST.GRAND_TOTAL_GIFT_ACTIVITY_ITEMS]: { [CONST.ACTIVITY_ITEM]: preGrantTotalItems },\r\n        [CONST.LOGIN_GIFT_ACTIVITY_ITEMS]: { [CONST.ACTIVITY_ITEM]: preGiftItems },\r\n        [CONST.ACTIVITY_ITEM_TO_FRAGEMNT]: { [CONST.ACTIVITY_ITEM]: activityItemsToSingleFragment },\r\n        [CONST.TOTAL_FRAGEMNT]: fragmentTotal,\r\n        [CONST.TOTAL_ACTIVITY_ITEMS]: activityItemsToSingleFragment * fragmentTotal,\r\n        [CONST.AVERAGE]: {\r\n          max: averageMax,\r\n          min: averageMin\r\n        },\r\n        [CONST.RESET_DIMAND_COST]: perDimandCost,\r\n        [CONST.MILESTONE_DIMAND_GIFT]: milestoneGiftDimand,\r\n      },\r\n      dataSource: activityItems\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({ dataSource: this.reccount(true) });\r\n  }\r\n\r\n  reccount(isInit = false) {\r\n    const { dataSource, option, count, free } = this.state;\r\n    const countedData = dataSource.map((data: any) => {\r\n      const totalOwnDimand = data[CONST.DIMAND] + (data[CONST.ACTIVITY_ITEM] / count * option[CONST.RESET_DIMAND_COST]);\r\n      const totalOwnPhoto = data[CONST.DIMAND] / option[CONST.RESET_DIMAND_COST] * count + data[CONST.ACTIVITY_ITEM];\r\n      data = {\r\n        ...data,\r\n        asumeCount: isInit ? data[CONST.ADVICE] : data.asumeCount,\r\n        [CONST.CONVERT_DIMAND]: totalOwnDimand,\r\n        [CONST.PROICE_PERCENTAGE]: totalOwnDimand / data[CONST.PRICE],\r\n        [CONST.OWN_ACTIVITY_ITEMS]: totalOwnPhoto,\r\n        [CONST.OWN_ACTIVITY_ITEMS_TO_FRAGEMNT]: totalOwnPhoto / activityItemsToSingleFragment,\r\n      };\r\n      if (isInit) {\r\n        data[CONST.EXPECT_PURCHASE] = <InputNumber key={`${CONST.EXPECT_PURCHASE}_${data.key}`} min={0} max={data[CONST.LIMIT]} defaultValue={data[CONST.ADVICE]} onChange={value => {\r\n          this.setState({\r\n            dataSource: this.state.dataSource.map((d: any) => {\r\n              if (d.key === data.key) {\r\n                const totalOwnPhoto = d[CONST.DIMAND] / option[CONST.RESET_DIMAND_COST] * this.state.count + d[CONST.ACTIVITY_ITEM];\r\n                d.asumeCount = value;\r\n                d[CONST.EXPECT_OWN_TOTAL_ACTIVITY_ITEMS] = d.asumeCount * totalOwnPhoto;\r\n              }\r\n              return d;\r\n            })\r\n          })\r\n        }} />\r\n      }\r\n\r\n      data[CONST.EXPECT_OWN_TOTAL_ACTIVITY_ITEMS] = data.asumeCount * totalOwnPhoto;\r\n    \r\n      return data;\r\n    });\r\n    return countedData;\r\n  }\r\n\r\n  render() {\r\n    const { dataSource, option, count, free } = this.state;\r\n    const totalPhoto = option[CONST.TOTAL_ACTIVITY_ITEMS] - _.sumBy(this.state.dataSource, (d: any) => d[CONST.EXPECT_OWN_TOTAL_ACTIVITY_ITEMS]) - option[CONST.GRAND_TOTAL_GIFT_ACTIVITY_ITEMS][CONST.ACTIVITY_ITEM] - option[CONST.LOGIN_GIFT_ACTIVITY_ITEMS][CONST.ACTIVITY_ITEM] - free - option[CONST.MILESTONE_DIMAND_GIFT] / option[CONST.RESET_DIMAND_COST] * count;\r\n    // console.log(option[CONST.TOTAL_ACTIVITY_ITEMS], _.sumBy(this.state.dataSource, (d: any) => d[CONST.EXPECT_OWN_TOTAL_ACTIVITY_ITEMS]), option[CONST.GRAND_TOTAL_GIFT_ACTIVITY_ITEMS][CONST.ACTIVITY_ITEM], option[CONST.LOGIN_GIFT_ACTIVITY_ITEMS][CONST.ACTIVITY_ITEM], free, option[CONST.MILESTONE_DIMAND_GIFT] / option[CONST.RESET_DIMAND_COST] * count)\r\n    return (\r\n      <div className=\"container my-3\">\r\n        <h3 className=\"mb-3\">【{CONST.PAGE_TITLE}】禮包計算機 <small>戀與製作人</small></h3>\r\n        <div className=\"row\">\r\n          <div className=\"col-12 col-lg-7\">\r\n            <div className=\"table-responsive\">\r\n              <table className=\"table table-striped\">\r\n                <thead>\r\n                  <tr>\r\n                    <th style={{minWidth: 90}}></th>\r\n                    {_.map(dataSource, (item: any, index: any) =>\r\n                      <th className=\"text-center\" key={index}>{item.key}</th>\r\n                    )}\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {_.map(dataSource[0], (row: any, key: string) =>\r\n                    !_.includes(['key', CONST.ADVICE, 'asumeCount'], key) ? \r\n                    <tr key={key}>\r\n                      <th className={classnames({\r\n                        'text-right': true,\r\n                        'text-danger': _.includes([CONST.EXPECT_PURCHASE], key)\r\n                      })}>{key}</th>\r\n                      {_.map(dataSource, (item: any, index: any) => {\r\n                        const displayKey = _.result(dataSource, `[${index}]['key']`);\r\n                        let displayItem = _.result(dataSource, `[${index}][${key}]`);\r\n                        if (_.isNumber(displayItem)) {\r\n                          displayItem = numeral(displayItem).format(NUMERAL_FORMAT);\r\n                        }\r\n                        return <td className=\"text-right\" key={`${key}_${displayKey}`} >{displayItem}</td>;\r\n                      })}\r\n                    </tr> : null\r\n                  )}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n            <div className=\"table-responsive\">\r\n              <table className=\"table table-striped\">\r\n                <tbody>\r\n                  <tr className=\"bg-secondary text-white\">\r\n                    <th className=\"text-right\">{CONST.TOTAL_PRICE}</th>\r\n                    <td className=\"text-right\">NT$&nbsp;{numeral(_.sumBy(this.state.dataSource, (d: any) => d.asumeCount * d[CONST.PRICE])||0).format(NUMERAL_FORMAT)}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <th className=\"text-right\">{CONST.NEEDED_ACTIVITY_ITEMS}</th>\r\n                    <td className=\"text-right\">{numeral(totalPhoto).format(NUMERAL_FORMAT)}</td>\r\n                  </tr>\r\n                  <tr className=\"bg-danger text-white\">\r\n                    <th className=\"text-right\">{CONST.NEEDED_DIMAND}</th>\r\n                    <td className=\"text-right\">{numeral(totalPhoto / count * option[CONST.RESET_DIMAND_COST]).format(NUMERAL_FORMAT)}</td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-12 col-lg-5\">\r\n            <div className=\"table-responsive\">\r\n              <table className=\"table table-striped\">\r\n                <tbody>\r\n                  <tr>\r\n                    <th className=\"text-right\">{CONST.FREE_ACTIVITY_COUNT}</th>\r\n                    <td className=\"text-right\"><InputNumber key={CONST.FREE_ACTIVITY_COUNT} min={freeDefault} max={free * option[CONST.AVERAGE]['max']} defaultValue={freeDefault} onChange={value => {\r\n                      this.setState({ free: value }, () => {\r\n                        this.setState({ dataSource: this.reccount() });\r\n                      });\r\n                    }}/></td>\r\n                  </tr>\r\n                  <tr>\r\n                    <th className=\"text-right\">{CONST.AVERAGE_ACTIVITY_ITEMS}</th>\r\n                    <td className=\"text-right\"><InputNumber key={CONST.AVERAGE_ACTIVITY_ITEMS} step={0.01} min={option[CONST.AVERAGE]['min']} max={option[CONST.AVERAGE]['max']} defaultValue={count} onChange={value => {\r\n                      this.setState({ count: value }, () => {\r\n                        this.setState({ dataSource: this.reccount() });\r\n                      });\r\n                    }}/></td>\r\n                  </tr>\r\n                  {_.map(option, (opt: any, key: string) => {\r\n                    const value = _.isObject(opt) ? _.map(opt, (val, k) => numeral(val).format('0,0')).join('') : numeral(opt).format('0,0');\r\n\r\n                    return !_.includes([CONST.AVERAGE, 'asumeCount'], key) ?\r\n                      <tr key={key}>\r\n                        <th className=\"text-right\">{key}</th>\r\n                        <td className=\"text-right\">{value}</td>\r\n                      </tr> : null\r\n                  })}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <hr />\r\n        <p className=\"text-black-50 mb-2\">CHANGELOG</p>\r\n        <p className=\"text-black-50 small mb-1\">[19.04.17] 名稱異動</p>\r\n        <div className=\"d-table w-100 text-black-50 small\">\r\n          <div className=\"d-table-row\">\r\n            <div className=\"d-table-cell pr-1 width--xs text-nowrap\">※</div>\r\n            <div className=\"d-table-cell\">預計掉落個數 → 平均掉落個數</div>\r\n          </div>\r\n          <div className=\"d-table-row\">\r\n            <div className=\"d-table-cell pr-1 width--xs text-nowrap\">※</div>\r\n            <div className=\"d-table-cell\">(鑽石+白起的寫真)換算鑽石數 → (鑽石+寫真)換算鑽數</div>\r\n          </div>\r\n          <div className=\"d-table-row\">\r\n            <div className=\"d-table-cell pr-1 width--xs text-nowrap\">※</div>\r\n            <div className=\"d-table-cell\">1元幾鑽(只算鑽石+寫真) → (鑽石+寫真)1元幾鑽</div>\r\n          </div>\r\n          <div className=\"d-table-row\">\r\n            <div className=\"d-table-cell pr-1 width--xs text-nowrap\">※</div>\r\n            <div className=\"d-table-cell\">可得碎片 → 寫真可換碎片數</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Boiling;","export const NUMERAL_FORMAT = '0,0.[000]';","import React, { Component } from 'react';\n// import logo from './logo.svg';\nimport './scss/main.scss';\nimport Boiling from './Gavin/Boiling';\n\nclass App extends Component {\n  render() {\n    return <Boiling />;\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}